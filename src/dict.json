{
  "abci": "# ABCI \n The Application Blockchain Interface is a protocol that connects a state-machine and a consensus engine like Tendermint.",
  "account": "# Account \n In the context of a blockchain network, an account is a set of private key/public key/address. ",
  "address": "# Address \n An address is a public string with a human-readable prefix that identifies an account. It is obtained by applying mathematical transformations to a public key. ",
  "application-layer": "# Application Layer \n The Application Layer is the top layer of a blockchain software that defines the state and state-transition function. ",
  "application-specific-blockchain": "# Application-specific Blockchain \n Special purpose blockchain, tailored for one specific application. ",
  "atom": "# Atom \n The Atom is the native staking currency of the Cosmos Hub. Atoms can be bonded to obtain voting power, which can be delegated to validators who maintain the Cosmos Hub. ",
  "byzantine": "# Byzantine \n In the context of distributed systems, a Byzantine node is a node that acts maliciously. ",
  "bft": "# BFT \n BFT stands for Byzantine Fault-Tolerance. Byzantine faults within distributed systems are some of the most difficult to deal with. A Byzantine Fault-Tolerant consensus algorithm is a consensus algorithm that guarantees safety for up to a third of Byzantine, or malicious, actors.",
  "blockchain": "# Blockchain \n A blockchain can be described as a distributed digital ledger maintained by a set of validators that remains correct even if some of the validators (less than a third) are malicious. ",
  "bonding": "# Bonding \n Process of locking up staking tokens for a period of time in order to obtain voting power. Bonded tokens give right to rewards and are exposed to slashing. ",
  "bpos": "# BPoS \n Bonded Proof-of-Stake is the name of the Proof-of-Stake design used for the Cosmos Hub and most of the public blockchains in the Cosmos Network. ",
  "consensus-algorithm": "# Consensus Algorithm \n A consensus algorithm is a process in computer science used to achieve agreement on a state value among distributed nodes. ",
  "cosmos": "# Cosmos \n Cosmos is a network of interoperable blockchains. ",
  "cosmos-hub": "# Cosmos Hub \n The Cosmos Hub is the first Hub to launch in the Cosmos Network. ",
  "cosmos-sdk": "# Cosmos SDK \n The Cosmos SDK is a modular framework that simplifies the process of building secure blockchain applications.",
  "cosmos-voyager": "# Cosmos Voyager \n The Cosmos Voyager is the User Interface for users to delegate, stake, engage in governance, etc. with the Cosmos Network.",
  "delegator": "# Delegator \n Delegators are staking token holders that contribute to the security of a blockchain network by delegating the voting power they obtain from bonding to secure and highly available validators.",
  "discrete-logarithm": "# The Discrete Logarithm Problem \n This discrete logarithm problem assumes that it is difficult to factor a large integer composed of two or more large prime factors.",
  "double-signing": "# Double Signing \n See equivocation",
  "elliptic-curve": "# Elliptic Curve \n In elliptic curve cryptography, a huge curve is generated to derive a public key from a private key. The chance of collision is 1 in several billions, making it near impossible to derive the private key from the public key.",
  "ethermint": "# Ethermint \n Ethermint is a software that takes the Ethereum Virtual Machine and turns it into a Cosmos-SDK module. This module can be combined with other SDK modules like staking to create fully-functional Proof-of-Stake blockchains able to run Ethereum Smart Contracts.  Ethermint chains are natively compatible with Cosmos. ",
  "equivocation": "# Equivocation \n When a validator signs more than two blocks at the same height that share a common ancestor. Is a fraud. ",
  "fraud": "# Fraud \n Faulty behaviour committed by a validator, as defined by the protocol.",
  "fraud-proof": "# Fraud Proof \n Cryptographic proof of a fraud. ",
  "full-node": "# Full-Node \n A full-node is a node that stores and verifies the entire state of a blockchain. ",
  "gaia": "# Gaia \n  Gaia is the name of the Cosmos SDK application for the Cosmos Hub.",
  "governance": "# Governance \n Blockchain governance is a process that allows participants to vote on-chain using their bonded tokens.",
  "hub": "# Hub \n A Hub is a blockchain whose purpose is to connect Zones together while limiting the number of connexions and preventing double-spend attacks among Zones. ",
  "ibc": "# IBC \n IBC is the interblockchain communication protocol which can be thought of as the TCP/IP for blockchains. It allows fast-finality blockchains to exchange value and data with each other in a decentralized way. ",
  "ibc-packet": "# IBC packet \n IBC packets are packets of data which carry messages and fraud proofs from one blockchain to another.",
  "light-client": "# Light Client  \n A light-client is a blockchain client that only downloads the headers of the blocks. It verifies the result of its queries against these headers (see Merkle Proof). This gives users a lightweight alternative to full-nodes with good security guarantees. ",
  "lotion": "# Lotion \n Lotion is the developer toolkit which allows you to build blockchain applications on top of Tendermint in JavaScript.",
  "merkle-proof": "# Merkle Proof \n A Merkle Proof is an efficient way of proving that a piece of data is included in a set. ",
  "minting": "# Minting \n Process of creating new units of tokens. ",
  "mnemonic": "# Mnemonic \n A mnemonic is a sequence of words that is used as seed to derive private keys. The mnemonic is at the core of each wallet. **Never lose your mnemonic. Write it down on a piece of paper and store it somewhere safe. If you lose it, there is no way to retrieve it. If someone gains access to it, they gain access to all the associated accounts.**",
  "module": "# Module \n In the context of the SDK, a module is a subset of the state-machine. A Cosmos-SDK application is usually composed of an aggregation of modules. ",
  "peg-zone": "# Peg-Zone \n A Peg-Zone is a blockchain that acts as a bridge between the Cosmos Network and blockchains that do not have fast-finality, like Proof-of-Work chains. ",
  "permissionless": "# Permissionless \n A permissionless system is an open system that everyone can join and participate in. ",
  "pos": "# Proof-of-Stake \n Proof-of-Stake is an incentivisation layer that works in conjunction with a consensus layer to prevent Sybil attacks and incentivise validators to behave correctly. ",
  "pow": "# Proof-of-Work \n Proof-of-Work is an economic measure to deter denial of service attacks and other service abuses such as spam on a network by requiring some work from the service requester, usually meaning processing time by a computer",
  "private-key": "# Private Key \n A private key is a secret piece of information used to sign messages. In the blockchain context, a private key identifies the owner of an account. The private key of a user should never be revealed to others. Also see mnemonic.",
  "public-key": "# Public Key  \n A public key is a piece of information obtained by applying a one-way mathematical function on a private key. From it, an address can be derived. A private key cannot be found from a public key. ",
  "rewards": "# Rewards \n Newly minted tokens and transactions fees are given out as rewards to bonded staking token holder. ",
  "scalability": "# Scalability  \n A scalable system is a system that is able to accommodate a growing amount of requests. ",
  "signature": "# Signature \n A digital signature is a piece of cryptographic information that proves the owner of a given private key approved of a given message without revealing the private key. ",
  "sharding": "# Sharding \n Sharding is a scalability method which consists in splitting the database in multiple shards that each contain a subset of the state.",
  "slashing": "# Slashing \n When evidence of a validator fraud is reported, the bonded stake that was delegated to this validator is partially destroyed. This process is called slashing. ",
  "smart-contract": "# Smart Contract  \n Smart contract are account holding objects that contain code functions. They are usually deployed on blockchains that have a Virtual Machine as part of their application layer. ",
  "sovereignty": "# Sovereignty  \n A sovereign blockchain application is an application whose governance system has full authority over the blockchain on which it runs. This includes having its own independent validator set. ",
  "state-machine": "# State Machine \n A state-machine is  a program that holds a state (e.g. a list of accounts and balances for a cryptocurrency) and modifies it when it receives inputs",
  "state-transition": "# State Transition  \n Transition from one state to another. Triggered by transactions, or by automatic messages at the beginning and at the end of each block. ",
  "tendermint": "# Tendermint \n Tendermint is both a consensus engine and a BFT consensus algorithm. State-machines can be built in any programming language on top of Tendermint, which takes care of replicating it. ",
  "testnet": "# Testnet \n A testnet is a blockchain network dedicated to testing the software. ",
  "token": "# Token \n A token is a digital asset usually stored and secured by a blockchain. ",
  "tx": "# Transaction \n Transactions are signed messages that trigger state transitions. ",
  "tx-fees": "# Transaction Fees \n Transactions in a blockchain network need to include a fee paid with tokens in order for them to be processed. ",
  "validator": "# Validator \n Validators are special full-nodes that take part in the consensus algorithm to collectively add blocks to the blockchain. ",
  "validator-set": "# Validator Set \n The validator set is the group of validators actively participating in consensus. On the Cosmos Hub, the top 100 validator candidates with the most voting power form the validator set. ",
  "voting-power": "# Voting Power \n When staking token are bonded, a proportional amount of voting power is obtained. This voting power can be delegated to a validator candidate. ",
  "zone": "# Zone \n Zones are regular application-specific blockchains in the Cosmos Network. They can communicate with each other, usually by connecting to Hubs via IBC. "
}
